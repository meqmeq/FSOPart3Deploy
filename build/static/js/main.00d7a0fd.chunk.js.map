{"version":3,"sources":["components/Note.js","App.js","reportWebVitals.js","index.js"],"names":["Note","note","content","baseUrl","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","console","log","axios","get","then","response","data","length","notesToShow","filter","important","onClick","map","id","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","post","concat","value","onChange","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAMeA,EAJF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OAAO,6BAAKA,EAAKC,W,gBCCbC,EAAU,aA0DDC,EAxDH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IAAMC,IAAIb,GAASc,MAAK,SAACC,GACvBL,QAAQC,IAAI,qBACZP,EAASW,EAASC,WAEnB,IACHN,QAAQC,IAAI,SAAUR,EAAMc,OAAQ,SAEpC,IAmBMC,EAAcX,EAAUJ,EAAQA,EAAMgB,QAAO,SAACrB,GAAD,OAAUA,EAAKsB,aAElE,OACE,gCACE,uCACA,8BACE,yBAAQC,QAAS,kBAAMb,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGW,EAAYI,KAAI,SAACxB,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKyB,SAGpB,uBAAMC,SAlCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB5B,QAASM,EACTuB,MAAM,IAAIC,MAAOC,cACjBV,UAAWW,KAAKC,SAAW,IAG7BpB,IAAMqB,KAAKjC,EAAS2B,GAAYb,MAAK,SAACC,GACpCX,EAASD,EAAM+B,OAAOnB,EAASC,OAC/BV,EAAW,QAwBX,UACE,uBAAO6B,MAAO9B,EAAS+B,SArBJ,SAACX,GACxBf,QAAQC,IAAIc,EAAMY,OAAOF,OACzB7B,EAAWmB,EAAMY,OAAOF,UAoBpB,wBAAQG,KAAK,SAAb,yBC5COC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.00d7a0fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note }) => {\r\n  return <li>{note.content}</li>;\r\n};\r\n\r\nexport default Note;\r\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(false);\n\n  useEffect(() => {\n    console.log(\"effect\");\n    axios.get(baseUrl).then((response) => {\n      console.log(\"promise fulfilled\");\n      setNotes(response.data);\n    });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    axios.post(baseUrl, noteObject).then((response) => {\n      setNotes(notes.concat(response.data));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}